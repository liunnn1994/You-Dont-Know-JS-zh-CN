name: Publish Release

on:
  workflow_run:
    branches:
      - main
    workflows: ["Publish Online"]
    types: [completed]

jobs:
  deploy-release:
    runs-on: ubuntu-latest

    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - 
          sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable fontconfig fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 --no-install-recommends

      - uses: actions/checkout@v3

      - uses: actions-cool/check-user-permission@v2
        id: checkUser
        with:
          require: "write"

      - uses: actions/cache@v3
        name: Setup puppeteer cache
        with:
          path: ~/.cache/puppeteer
          key: ${{ runner.os }}-puppeteer
          restore-keys: |
            ${{ runner.os }}-puppeteer

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Replace npmrc
        run: cp -f .github.npmrc .npmrc

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Vitepress custom theme
        run: |
          cp -a scripts/vitepress-theme/ .vitepress/theme

      - name: Build
        id: build
        run: |
          pnpm run generate-ol
          pnpm run generate-pdf
          echo "VERSION=v$(node -p 'require("./package.json").version')" >> $GITHUB_OUTPUT

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.build.outputs.VERSION }}
          tag_name: ${{ steps.build.outputs.VERSION }}
          body: ${{ steps.build.outputs.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            ./.vitepress/dist/pdf/*.pdf

      - name: Commit and push
        uses: stefanzweifel/git-auto-commit-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commit_message: Released ${{ steps.build.outputs.VERSION }}
